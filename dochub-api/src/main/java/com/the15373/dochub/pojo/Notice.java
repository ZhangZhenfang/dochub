package com.the15373.dochub.pojo;
// Generated 2018-6-24 22:12:53 by Hibernate Tools 5.2.8.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.the15373.dochub.dto.Dto;
import com.the15373.dochub.dto.NoticeDto;
import com.the15373.dochub.util.DateUtil;

/**
 * Notice generated by hbm2java
 */
@Entity
@Table(name = "notice")
public class Notice implements java.io.Serializable, Dto<NoticeDto> {

	private static final long serialVersionUID = 1L;
	private Long noticeid;
	private User user;
	private Date starttime;
	private Date deadline;
	private String path;
	private String notice;
	private String description;
	private int type;
	private Set<File> files = new HashSet<File>(0);

	public Notice() {
	}
	@Column(name = "notice", nullable = false, length = 64)
	public String getNotice() {
		return notice;
	}

	public void setNotice(String notice) {
		this.notice = notice;
	}

	public Notice(Date starttime, Date deadline, String description, int type) {
		this.starttime = starttime;
		this.deadline = deadline;
		this.description = description;
		this.type = type;
	}

	public Notice(User user, Date starttime, Date deadline, String path, String description, int type,
			Set<File> files) {
		this.user = user;
		this.starttime = starttime;
		this.deadline = deadline;
		this.path = path;
		this.description = description;
		this.type = type;
		this.files = files;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "noticeid", unique = true, nullable = false)
	public Long getNoticeid() {
		return this.noticeid;
	}

	public void setNoticeid(Long noticeid) {
		this.noticeid = noticeid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userid")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "starttime", nullable = false, length = 19)
	public Date getStarttime() {
		return this.starttime;
	}

	public void setStarttime(Date starttime) {
		this.starttime = starttime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deadline", nullable = false, length = 19)
	public Date getDeadline() {
		return this.deadline;
	}

	public void setDeadline(Date deadline) {
		this.deadline = deadline;
	}

	@Column(name = "path", length = 65535)
	public String getPath() {
		return this.path;
	}

	public void setPath(String path) {
		this.path = path;
	}

	@Column(name = "description", nullable = false, length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "type", nullable = false)
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "notice")
	public Set<File> getFiles() {
		return this.files;
	}

	public void setFiles(Set<File> files) {
		this.files = files;
	}

	@Override
	public NoticeDto toDto() {
		NoticeDto dto = new NoticeDto();
		dto.setDeadline(DateUtil.sdf.format(this.getDeadline()));
		dto.setStarttime(DateUtil.sdf.format(this.getStarttime()));
		dto.setDescription(this.getDescription());
		dto.setType(this.getType());
		dto.setUser(this.getUser().toDto());
		dto.setNotice(this.getNotice());
		dto.setNoticeid(this.getNoticeid().toString());
		return dto;
	}

}
